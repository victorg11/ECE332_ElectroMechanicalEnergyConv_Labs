-- ****************************************************************************
--
--  Trace file: Lab5.trc
--
--  RTI1104 7.9 (02-Nov-2017)
--  Fri Feb 28 14:13:40 2020
--
--  Copyright 2020, dSPACE GmbH. All rights reserved.
--
-- ****************************************************************************
--
--  Used options:
--    TRCGenerateVirtualBlocks      = 0
--    TRCGenerateLabels             = 0
--    TRCGenerateStates             = 0
--    TRCGenerateDerivatives        = 0
--    TRCGenerateParamValues        = 0
--    TRCGenerateApplicationKeyword = 0
--    TRCOnlyGlobals                = 0
--    TRCIsOmitVdOn                 = 0
--
--  Trace file format: 3

-- ******** Keywords **********************************************************
-- _application "Lab5.map"

_genname     "RTI"
_genversion  "7.9"
_gendate     "02/28/2020 14:13:43"
_description ""
_author      "RTI1104 7.9 (02-Nov-2017)"
_model       "Lab5"

-- Default data type formats
_floating_point_type(64,IEEE)
_integer_type(32)

-- No Data Capture blocks within model: use base sample time as sampling period
sampling_period[0]
{
  value:       0.0001
  alias:       "HostService"
  increment:   0.0001
  unit:        "s"
}



-- Type definitions for structures

struct Lab5_struct_isB4Cw3Ovpp8VfzP6RUqbD
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "OutputPortsWidth"
      type:    int(32)
      offs:    0
    }
endstruct

struct Lab5_struct_dZjXwTiylTPloSUBFpnHJB
{
  array-incr: 4         
}
    structField0 
    {
      alias:   "InputPortsWidth"
      type:    int(32)
      offs:    0
    }
endstruct


-- ******** Simulation control variables **************************************

finalTime
{
 type:  flt(64,IEEE)*
 alias: "finalTime"
 desc:  "Simulation stop time. When reached, simState switches to STOP."
 flags:  READONLY
 unit:  "s"
 addr:    0x0003dff4
}

currentTime
{
 type:  flt(64,IEEE)*
 alias: "currentTime"
 desc:  "Current simulation time. Increments with execution of Timer Task 1."
 flags: READONLY
 unit:  "s"
 addr:    0x0003dff0
}

modelStepSize
{
 type:  flt(64,IEEE)
 alias: "modelStepSize"
 desc:  "Fixed step size of the model, sample time of Timer Task 1."
 flags: READONLY
 unit:  "s"
 addr:    0x0003dff8
}

simState
{
 type:  int(32)
 alias: "simState"
 desc:  "Simulation state: STOP=0 PAUSE=1 RUN=2"
 unit:  "-"
 addr:    0x0003d2f8
}

msg_last_error_no
{
 type:  uint(32)
 alias: "errorNumber"
 desc:  "Error number of last error message (zero if no error)."
 unit:  "-"
 flags: READONLY
 addr:    0x0003d47c
}

p_dsts_sum_of_reset_time
{
 type:  flt(64,IEEE)*
 alias: "sumOfResetTime"
 desc:  "Internal variable for summing up reset time."
 unit:  "s"
 flags: READONLY|HIDDEN
 addr:    0x0003a028
}


-- ******** Task Information variables ****************************************
group "Task Info"
{
 flags: COLLAPSED
}
  group "Timer Task 1"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
		 addr:    0x0003e000
		}
  pRti_TIMERA_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
		 addr:    0x0003e004
		}
  pRti_TIMERA_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
		 addr:    0x0003e008
		}
  pRti_TIMERA_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
 addr:    0x0003e00c
}
  pRti_TIMERA_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
 addr:    0x0003e010
}
  pRti_TIMERA_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
 addr:    0x0003e014
}
  pRti_TIMERA_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
		 addr:    0x0003e018
		}
  pRti_TIMERA_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
		 addr:    0x0003e01c
		}
  pRti_TIMERA_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
		 addr:    0x0003e020
		}
  endgroup


endgroup


-- ******** Model variables ***************************************************

group "Model Root"
	group "RPMVelFinal_AVG" -- block-group
	{
	 block: "Outport"
	}
		p_5_Lab5_real_T_0[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "In1"
		 flags:   READONLY
		 addr:    0x0003d2f4
		}



	endgroup -- block-group "RPMVelFinal_AVG"

	group "Ref_Speed" -- block-group
	{
	 block: "Outport"
	}
		p_5_Lab5_real_T_0[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "In1"
		 flags:   READONLY
		 addr:    0x0003d2f4
		}



	endgroup -- block-group "Ref_Speed"

	group "Wref" -- block-group
	{
	 block: "Constant"
	}
		-- Skipping output Out1
		p_1_Lab5_real_T_0[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Value"
		 flags:   PARAM
		 addr:    0x0003d2dc
		}


	endgroup -- block-group "Wref"

	group "Delay" -- block-group
	{
	 block: "Delay"
	}
		p_0_Lab5_real_T_0[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 flags:   OUTPUT|READONLY
		 addr:    0x0003d2d8
		}
		p_1_Lab5_uint32_T_1[0]
		{
		 type:    uint(32)*
		 alias:   "DelayLength"
		 flags:   PARAM
 addr:    0x0003d2e0
}
		p_1_Lab5_real_T_0[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "InitialCondition"
		 flags:   PARAM
 addr:    0x0003d2dc
}


	endgroup -- block-group "Delay"

  
  
	group "PWM" -- subsystem-group



		group "Constant" -- block-group
		{
		 block: "Constant"
		}
			p_0_Lab5_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}
			p_1_Lab5_real_T_0[10]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Constant"

		group "Constant1" -- block-group
		{
		 block: "Constant"
		}
			p_0_Lab5_real_T_0[13]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x0003d2d8
		}
			p_1_Lab5_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Constant1"

		group "Constant2" -- block-group
		{
		 block: "Constant"
		}
			p_0_Lab5_real_T_0[18]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}
			p_1_Lab5_real_T_0[24]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Constant2"

		group "PWM Enable" -- block-group
		{
		 block: "Constant"
		}
			-- Skipping output Out1
			p_1_Lab5_real_T_0[27]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "PWM Enable"

		group "Integrator" -- block-group
		{
		 block: "Integrator"
		}
			p_0_Lab5_real_T_0[5]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}
			p_1_Lab5_real_T_0[5]
			{
			 type:    flt(64,IEEE)*
			 alias:   "InitialCondition"
			 flags:   PARAM
		 addr:    0x0003d2dc
		}


		endgroup -- block-group "Integrator"

		group "Product" -- block-group
		{
		 block: "Product"
		}
			p_0_Lab5_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x0003d2d8
		}


		endgroup -- block-group "Product"

		group "Product1" -- block-group
		{
		 block: "Product"
		}
			p_0_Lab5_real_T_0[12]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}


		endgroup -- block-group "Product1"

		group "Product2" -- block-group
		{
		 block: "Product"
		}
			p_0_Lab5_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}


		endgroup -- block-group "Product2"

		group "Saturation" -- block-group
		{
		 block: "Saturate"
		}
			p_0_Lab5_real_T_0[10]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}
			p_1_Lab5_real_T_0[11]
			{
			 type:    flt(64,IEEE)*
			 alias:   "UpperLimit"
			 flags:   PARAM
 addr:    0x0003d2dc
}
			p_1_Lab5_real_T_0[12]
			{
			 type:    flt(64,IEEE)*
			 alias:   "LowerLimit"
			 flags:   PARAM
			 addr:    0x0003d2dc
			}


		endgroup -- block-group "Saturation"

		group "Saturation1" -- block-group
		{
		 block: "Saturate"
		}
			p_0_Lab5_real_T_0[15]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}
			p_1_Lab5_real_T_0[18]
			{
			 type:    flt(64,IEEE)*
			 alias:   "UpperLimit"
			 flags:   PARAM
 addr:    0x0003d2dc
}
			p_1_Lab5_real_T_0[19]
			{
			 type:    flt(64,IEEE)*
			 alias:   "LowerLimit"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Saturation1"

		group "Saturation2" -- block-group
		{
		 block: "Saturate"
		}
			p_0_Lab5_real_T_0[20]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}
			p_1_Lab5_real_T_0[25]
			{
			 type:    flt(64,IEEE)*
			 alias:   "UpperLimit"
			 flags:   PARAM
 addr:    0x0003d2dc
}
			p_1_Lab5_real_T_0[26]
			{
			 type:    flt(64,IEEE)*
			 alias:   "LowerLimit"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Saturation2"

		group "Sine Wave" -- block-group
		{
		 block: "Sin"
		}
			p_0_Lab5_real_T_0[6]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}
			p_1_Lab5_real_T_0[6]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Amplitude"
			 flags:   PARAM
 addr:    0x0003d2dc
}
			p_1_Lab5_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Bias"
			 flags:   PARAM
			 addr:    0x0003d2dc
			}
			p_1_Lab5_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Frequency"
			 flags:   PARAM
			 addr:    0x0003d2dc
			}
			p_1_Lab5_real_T_0[9]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Phase"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Sine Wave"

		group "Sine Wave1" -- block-group
		{
		 block: "Sin"
		}
			p_0_Lab5_real_T_0[11]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}
			p_1_Lab5_real_T_0[13]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Amplitude"
			 flags:   PARAM
 addr:    0x0003d2dc
}
			p_1_Lab5_real_T_0[14]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Bias"
			 flags:   PARAM
			 addr:    0x0003d2dc
			}
			p_1_Lab5_real_T_0[15]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Frequency"
			 flags:   PARAM
 addr:    0x0003d2dc
}
			p_1_Lab5_real_T_0[16]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Phase"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Sine Wave1"

		group "Sine Wave2" -- block-group
		{
		 block: "Sin"
		}
			p_0_Lab5_real_T_0[16]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}
			p_1_Lab5_real_T_0[20]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Amplitude"
			 flags:   PARAM
 addr:    0x0003d2dc
}
			p_1_Lab5_real_T_0[21]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Bias"
			 flags:   PARAM
		 addr:    0x0003d2dc
		}
			p_1_Lab5_real_T_0[22]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Frequency"
			 flags:   PARAM
			 addr:    0x0003d2dc
			}
			p_1_Lab5_real_T_0[23]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Phase"
			 flags:   PARAM
 addr:    0x0003d2dc
}


		endgroup -- block-group "Sine Wave2"

		group "Add" -- block-group
		{
		 block: "Sum"
		}
			p_0_Lab5_real_T_0[9]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}


		endgroup -- block-group "Add"

		group "Add1" -- block-group
		{
		 block: "Sum"
		}
			p_0_Lab5_real_T_0[14]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}


		endgroup -- block-group "Add1"

		group "Add2" -- block-group
		{
		 block: "Sum"
		}
			p_0_Lab5_real_T_0[19]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}


		endgroup -- block-group "Add2"

  
  
		group "DS1104SL_DSP_PWM1" -- subsystem-group


		endgroup -- subsystem-group "DS1104SL_DSP_PWM1"


	endgroup -- subsystem-group "PWM"
  
  
	group "RTI Data" -- subsystem-group


	endgroup -- subsystem-group "RTI Data"
  
  
	group "Rotor Conversions" -- subsystem-group

		p_5_Lab5_real_T_0[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "RPMVelFinal_AVG"
		 flags:   OUTPUT|READONLY
 addr:    0x0003d2f4
}


		group "Gain1" -- block-group
		{
		 block: "Gain"
		}
			p_0_Lab5_real_T_0[2]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}
			p_1_Lab5_real_T_0[1]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
		 addr:    0x0003d2dc
		}


		endgroup -- block-group "Gain1"

		group "UnitConv2" -- block-group
		{
		 block: "Gain"
		}
			p_0_Lab5_real_T_0[1]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
		 addr:    0x0003d2d8
		}
			p_1_Lab5_real_T_0[0]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			 addr:    0x0003d2dc
			}


		endgroup -- block-group "UnitConv2"

		group "sampling1" -- block-group
		{
		 block: "Gain"
		}
			p_0_Lab5_real_T_0[3]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}
			p_1_Lab5_real_T_0[2]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
		 addr:    0x0003d2dc
		}


		endgroup -- block-group "sampling1"

		group "Moving\nAverage" -- block-group
		{
		 block: "MATLABSystem"
		}
			p_5_Lab5_real_T_0[0]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2f4
}


		endgroup -- block-group "Moving\nAverage"

  
  
		group "DS1104ENC_POS_C1" -- subsystem-group

			p_0_Lab5_real_T_0[21]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Enc position"
			 desc:    "No data (unused channel) "
			 flags:   OUTPUT|READONLY
			 addr:    0x0003d2d8
			}
			p_0_Lab5_real_T_0[0]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Enc delta position"
			 flags:   OUTPUT|READONLY
 addr:    0x0003d2d8
}

		endgroup -- subsystem-group "DS1104ENC_POS_C1"
  
  
		group "DS1104ENC_SETUP" -- subsystem-group


		endgroup -- subsystem-group "DS1104ENC_SETUP"


	endgroup -- subsystem-group "Rotor Conversions"
  
  
	group "MATLAB Function" -- subsystem-group

		p_0_Lab5_real_T_0[23]
		{
		 type:    flt(64,IEEE)*
		 alias:   "u"
		 flags:   OUTPUT|READONLY
		 addr:    0x0003d2d8
		}




	endgroup -- subsystem-group "MATLAB Function"
  
  
	group "Output Freq" -- subsystem-group

		p_0_Lab5_real_T_0[22]
		{
		 type:    flt(64,IEEE)*
		 alias:   "v"
		 flags:   OUTPUT|READONLY
		 addr:    0x0003d2d8
		}




	endgroup -- subsystem-group "Output Freq"



endgroup -- "Model Root"
-- ******** Tunable Parameters ************************************************

group "Tunable Parameters"


endgroup

-- ******** State Machine Data ************************************************

group "State Machine Data"


endgroup


-- ******** Labels ************************************************************

-- Generation of labels turned off with TRCGenerateLabels option.

-- ******** RTT Dynamic Variables *********************************************

-- Generation of RTT Dynamic Variables turned off with EnableRealTimeTesting option.

-- ******** User variables from model_usr.trc *********************************

-- RTI_USR_TRC_BEGIN

-- No user file Lab5_usr.trc found.

-- RTI_USR_TRC_END


-- ******** [EOF] *************************************************************

